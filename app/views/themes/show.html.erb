<%- title "Themes" %>

<h1>"<%= @theme.name %>" Theme.</h1>
<ul class="breadcrumbs">
  <li><a href="/">Home</a> /</li>
  <li><%= link_to "Themes", themes_path %> /</li>
  <li><%= @theme.name %></li>
</ul>

<% if @previous_theme_id %>
  <%= link_to "<", theme_path(id: @previous_theme_id), class: "flip", id: "flip-left" %>
<% end %>
<% if @next_theme_id %>
  <%= link_to ">", theme_path(id: @next_theme_id), class: "flip", id: "flip-right" %>
<% end %>

<%= render partial: "form", locals: { theme: @theme, success: nil, update_kind: nil } %>

<h2>Categories</h2>
<p>Categories related to this theme are are highlighted in black below. Click to add or remove a category from this theme. Changes are saved automatically.</p>

<% @dimensions.each do |dimension| %>
  <% dimension_categories = dimension.categories %>
  <% if dimension_categories.any? %>
    <h3><%= link_to dimension.display_name, dimension_path(id: dimension.id), class: "jump-link" %></h3>

    <div class="tag-collection">
      <% dimension_categories.sort_by(&:name).each do |category| %>
        <% is_selected = @theme.categories.include? category %>
        <a onclick="filterBy('<%= category.id %>'); updateAssociatedCategories(); return false">
          <div class="tag category <%= is_selected ? 'active' : '' %>" id="category-<%= category.id %>" data-category="<%= category.id %>">
            <%= category.name %>
          </div>
        </a>
      <% end %>
    </div>
  <% end %>
<% end %>

<h2>Danger Zone</h2>
<%= button_to "Delete This Theme", theme_path(@theme), form: { data: { turbo_confirm: "Are you sure you want to delete this Theme? This action cannot be undone." } }, method: :delete %>

<%= render partial: "/shared/filtering" %>

<script language="javascript">

  function toggleThemeForm(themeID) {
    const themeElement = document.getElementById('theme-' + themeID);
    const newThemeFormElement = document.getElementById('new-theme-form');
    const themeForm = document.getElementById('form-theme-' + themeID);

    if (Array.from(themeElement.classList).includes('active')) {
      newThemeFormElement.classList.add('hidden');
      themeForm.classList.remove('hidden');
    } else {
      newThemeFormElement.classList.remove('hidden');
      themeForm.classList.add('hidden');
    }
  }

  function updateAssociatedCategories() {
    const activeCategories = Array.from(document.querySelectorAll(".category.active"));
    categoryIDs = activeCategories.map((element) => element.getAttribute('data-category'));
    document.getElementById("field-categories").value = categoryIDs;
    submitButton = document.getElementById("button-theme");
    submitButton.click();
  }

</script>
